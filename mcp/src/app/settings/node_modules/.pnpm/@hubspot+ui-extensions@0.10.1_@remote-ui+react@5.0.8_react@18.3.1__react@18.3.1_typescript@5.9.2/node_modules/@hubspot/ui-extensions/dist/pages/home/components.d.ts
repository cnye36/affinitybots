import type * as types from '../../types';
/**
 * The `HeaderActions` component renders a container for action buttons in the app home header. It accepts `PrimaryHeaderActionButton` and `SecondaryHeaderActionButton` as children.
 *
 */
export declare const HeaderActions: "HeaderActions" & {
    readonly type?: "HeaderActions" | undefined;
    readonly props?: types.HeaderActionsProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"HeaderActions", types.HeaderActionsProps, true>>;
/**
 * The `PrimaryHeaderActionButton` component renders a primary action button in the app home header. This button is styled as the main call-to-action and only one should be used per `HeaderActions` container.
 *
 */
export declare const PrimaryHeaderActionButton: "PrimaryHeaderActionButton" & {
    readonly type?: "PrimaryHeaderActionButton" | undefined;
    readonly props?: types.HeaderActionButtonProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"PrimaryHeaderActionButton", types.HeaderActionButtonProps, true>>;
/**
 * The `SecondaryHeaderActionButton` component renders a secondary action button in the app home header. Multiple secondary actions can be used and they will be grouped appropriately in the header.
 *
 */
export declare const SecondaryHeaderActionButton: "SecondaryHeaderActionButton" & {
    readonly type?: "SecondaryHeaderActionButton" | undefined;
    readonly props?: types.HeaderActionButtonProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"SecondaryHeaderActionButton", types.HeaderActionButtonProps, true>>;
